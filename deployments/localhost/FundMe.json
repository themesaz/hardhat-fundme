{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priecFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minimumUsd",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x7befb7a33cc749a31f3230614bfa11065c0190da6678ff32a4af9303274303b3",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "815365",
    "logsBloom": "0x
    "blockHash": "0x264caa9bfad10b3877397ebe3e0b2c8ff7d8d7b2fff51e31f150b12be3c0af05",
    "transactionHash": "0x7befb7a33cc749a31f3230614bfa11065c0190da6678ff32a4af9303274303b3",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "815365",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "187e9b98b13180bc3fce27cce4b7a36c",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priecFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minimumUsd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"\\r\\n// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"./PriceConverter.sol\\\";\\r\\n\\r\\nerror NotOwner();\\r\\n\\r\\ncontract FundMe{\\r\\n\\r\\n    using PriceConverter for uint256;\\r\\n\\r\\n    uint256 public constant minimumUsd = 50 * 1e18;\\r\\n    address[] public funders;\\r\\n    mapping(address => uint256) public addressToAmountFunded;\\r\\n\\r\\n    address public immutable i_owner;\\r\\n\\r\\n    AggregatorV3Interface public priceFeed;\\r\\n\\r\\n    constructor(address priecFeedAddress){\\r\\n        i_owner = msg.sender;\\r\\n        priceFeed = AggregatorV3Interface(priecFeedAddress);\\r\\n    }\\r\\n\\r\\n    modifier onlyOwner{\\r\\n        //require(msg.sender == i_owner,\\\"Sender is not the owner\\\");\\r\\n        if(msg.sender != i_owner){\\r\\n            revert NotOwner();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    function fund() public payable{\\r\\n        require(msg.value.getConversionRate(priceFeed) >= minimumUsd,\\\"Didn't sent enough!\\\");\\r\\n        funders.push(msg.sender);\\r\\n        addressToAmountFunded[msg.sender] = msg.value;\\r\\n    }\\r\\n    \\r\\n    function withdraw() public onlyOwner {\\r\\n        for(uint256 funderIndex = 0; funderIndex < funders.length; funderIndex++){\\r\\n            address funder = funders[funderIndex];\\r\\n            addressToAmountFunded[funder] = 0;\\r\\n        }\\r\\n        funders = new address[](0);\\r\\n\\r\\n        (bool callSuccess,) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\r\\n        require(callSuccess);\\r\\n    }\\r\\n\\r\\n    receive() external payable{\\r\\n        fund();\\r\\n    }\\r\\n    fallback() external payable{\\r\\n        fund();\\r\\n    }\\r\\n\\r\\n}\",\"keccak256\":\"0x822165715a147e09cb18034f4aa0c18ca4df982a2ba59a7122be86f426005fc0\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\n\\r\\nlibrary PriceConverter{\\r\\n\\r\\n     function getPrice(AggregatorV3Interface priceFeed) internal view returns(uint256){\\r\\n        (, int256 price,,,) = priceFeed.latestRoundData();\\r\\n        return uint256(price * 1e10);\\r\\n    }\\r\\n\\r\\n    function getVersion() internal view returns(uint256){\\r\\n        return AggregatorV3Interface(0x8A753747A1Fa494EC906cE90E9f37563A8AF630e).version();\\r\\n    }\\r\\n    \\r\\n    function getConversionRate(uint256 ethAmount, AggregatorV3Interface priceFeed) internal view returns(uint256) {\\r\\n        uint256 ethPrice = getPrice(priceFeed);\\r\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18;\\r\\n        return ethAmountInUsd;\\r\\n    } \\r\\n}\",\"keccak256\":\"0x4b5dda4f8c6b1cfa8c3bd56e186bbbe7eca7166a8ef1f9e63b4d8c92d02b0af2\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b50604051610ec1380380610ec1833981810160405281019061003291906100c5565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610140565b6000815190506100bf81610129565b92915050565b6000602082840312156100db576100da610124565b5b60006100e9848285016100b0565b91505092915050565b60006100fd82610104565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b610132816100f2565b811461013d57600080fd5b50565b60805160601c610d5c610165600039600081816102e101526105290152610d5c6000f3fe6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a1461010c578063b60d428814610137578063dba6335f14610141578063dc0d3dff1461016c57610083565b8063098de8201461008d5780633ccfd60b146100b85780633e47d6f3146100cf57610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102d2565b6040516100af9190610929565b60405180910390f35b3480156100c457600080fd5b506100cd6102df565b005b3480156100db57600080fd5b506100f660048036038101906100f19190610776565b6104e9565b6040516101039190610929565b60405180910390f35b34801561011857600080fd5b50610121610501565b60405161012e91906108ee565b60405180910390f35b61013f6101a9565b005b34801561014d57600080fd5b50610156610527565b60405161016391906108d3565b60405180910390f35b34801561017857600080fd5b50610193600480360381019061018e91906107a3565b61054b565b6040516101a091906108d3565b60405180910390f35b6802b5e3af16b18800006101e8600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461058a90919063ffffffff16565b1015610229576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022090610909565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b6802b5e3af16b188000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610364576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561040f57600080828154811061038957610388610c3b565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061040790610b94565b915050610367565b50600067ffffffffffffffff81111561042b5761042a610c6a565b5b6040519080825280602002602001820160405280156104595781602001602082028036833780820191505090505b506000908051906020019061046f929190610666565b5060003373ffffffffffffffffffffffffffffffffffffffff1647604051610496906108be565b60006040518083038185875af1925050503d80600081146104d3576040519150601f19603f3d011682016040523d82523d6000602084013e6104d8565b606091505b50509050806104e657600080fd5b50565b60016020528060005260406000206000915090505481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000818154811061055b57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080610596836105c6565b90506000670de0b6b3a764000085836105af9190610aa8565b6105b99190610960565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561060f57600080fd5b505afa158015610623573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061064791906107d0565b5050509150506402540be4008161065e9190610991565b915050919050565b8280548282559060005260206000209081019282156106df579160200282015b828111156106de5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610686565b5b5090506106ec91906106f0565b5090565b5b808211156107095760008160009055506001016106f1565b5090565b60008135905061071c81610cca565b92915050565b60008151905061073181610ce1565b92915050565b60008135905061074681610cf8565b92915050565b60008151905061075b81610cf8565b92915050565b60008151905061077081610d0f565b92915050565b60006020828403121561078c5761078b610c99565b5b600061079a8482850161070d565b91505092915050565b6000602082840312156107b9576107b8610c99565b5b60006107c784828501610737565b91505092915050565b600080600080600060a086880312156107ec576107eb610c99565b5b60006107fa88828901610761565b955050602061080b88828901610722565b945050604061081c8882890161074c565b935050606061082d8882890161074c565b925050608061083e88828901610761565b9150509295509295909350565b61085481610b02565b82525050565b61086381610b5e565b82525050565b600061087660138361094f565b915061088182610c9e565b602082019050919050565b6000610899600083610944565b91506108a482610cc7565b600082019050919050565b6108b881610b3e565b82525050565b60006108c98261088c565b9150819050919050565b60006020820190506108e8600083018461084b565b92915050565b6000602082019050610903600083018461085a565b92915050565b6000602082019050818103600083015261092281610869565b9050919050565b600060208201905061093e60008301846108af565b92915050565b600081905092915050565b600082825260208201905092915050565b600061096b82610b3e565b915061097683610b3e565b92508261098657610985610c0c565b5b828204905092915050565b600061099c82610b14565b91506109a783610b14565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821160008413600084131616156109e6576109e5610bdd565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610a2357610a22610bdd565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610a6057610a5f610bdd565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610a9d57610a9c610bdd565b5b828202905092915050565b6000610ab382610b3e565b9150610abe83610b3e565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610af757610af6610bdd565b5b828202905092915050565b6000610b0d82610b1e565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b6000610b6982610b70565b9050919050565b6000610b7b82610b82565b9050919050565b6000610b8d82610b1e565b9050919050565b6000610b9f82610b3e565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610bd257610bd1610bdd565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b7f4469646e27742073656e7420656e6f7567682100000000000000000000000000600082015250565b50565b610cd381610b02565b8114610cde57600080fd5b50565b610cea81610b14565b8114610cf557600080fd5b50565b610d0181610b3e565b8114610d0c57600080fd5b50565b610d1881610b48565b8114610d2357600080fd5b5056fea2646970667358221220d5d0f92786b1676173bc3dbda8123739236e6964aee85f9180fda1bcc8be5d6664736f6c63430008070033",
  "deployedBytecode": "0x6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a1461010c578063b60d428814610137578063dba6335f14610141578063dc0d3dff1461016c57610083565b8063098de8201461008d5780633ccfd60b146100b85780633e47d6f3146100cf57610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102d2565b6040516100af9190610929565b60405180910390f35b3480156100c457600080fd5b506100cd6102df565b005b3480156100db57600080fd5b506100f660048036038101906100f19190610776565b6104e9565b6040516101039190610929565b60405180910390f35b34801561011857600080fd5b50610121610501565b60405161012e91906108ee565b60405180910390f35b61013f6101a9565b005b34801561014d57600080fd5b50610156610527565b60405161016391906108d3565b60405180910390f35b34801561017857600080fd5b50610193600480360381019061018e91906107a3565b61054b565b6040516101a091906108d3565b60405180910390f35b6802b5e3af16b18800006101e8600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461058a90919063ffffffff16565b1015610229576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022090610909565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b6802b5e3af16b188000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610364576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561040f57600080828154811061038957610388610c3b565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061040790610b94565b915050610367565b50600067ffffffffffffffff81111561042b5761042a610c6a565b5b6040519080825280602002602001820160405280156104595781602001602082028036833780820191505090505b506000908051906020019061046f929190610666565b5060003373ffffffffffffffffffffffffffffffffffffffff1647604051610496906108be565b60006040518083038185875af1925050503d80600081146104d3576040519150601f19603f3d011682016040523d82523d6000602084013e6104d8565b606091505b50509050806104e657600080fd5b50565b60016020528060005260406000206000915090505481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000818154811061055b57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080610596836105c6565b90506000670de0b6b3a764000085836105af9190610aa8565b6105b99190610960565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561060f57600080fd5b505afa158015610623573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061064791906107d0565b5050509150506402540be4008161065e9190610991565b915050919050565b8280548282559060005260206000209081019282156106df579160200282015b828111156106de5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610686565b5b5090506106ec91906106f0565b5090565b5b808211156107095760008160009055506001016106f1565b5090565b60008135905061071c81610cca565b92915050565b60008151905061073181610ce1565b92915050565b60008135905061074681610cf8565b92915050565b60008151905061075b81610cf8565b92915050565b60008151905061077081610d0f565b92915050565b60006020828403121561078c5761078b610c99565b5b600061079a8482850161070d565b91505092915050565b6000602082840312156107b9576107b8610c99565b5b60006107c784828501610737565b91505092915050565b600080600080600060a086880312156107ec576107eb610c99565b5b60006107fa88828901610761565b955050602061080b88828901610722565b945050604061081c8882890161074c565b935050606061082d8882890161074c565b925050608061083e88828901610761565b9150509295509295909350565b61085481610b02565b82525050565b61086381610b5e565b82525050565b600061087660138361094f565b915061088182610c9e565b602082019050919050565b6000610899600083610944565b91506108a482610cc7565b600082019050919050565b6108b881610b3e565b82525050565b60006108c98261088c565b9150819050919050565b60006020820190506108e8600083018461084b565b92915050565b6000602082019050610903600083018461085a565b92915050565b6000602082019050818103600083015261092281610869565b9050919050565b600060208201905061093e60008301846108af565b92915050565b600081905092915050565b600082825260208201905092915050565b600061096b82610b3e565b915061097683610b3e565b92508261098657610985610c0c565b5b828204905092915050565b600061099c82610b14565b91506109a783610b14565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821160008413600084131616156109e6576109e5610bdd565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610a2357610a22610bdd565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610a6057610a5f610bdd565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610a9d57610a9c610bdd565b5b828202905092915050565b6000610ab382610b3e565b9150610abe83610b3e565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610af757610af6610bdd565b5b828202905092915050565b6000610b0d82610b1e565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b6000610b6982610b70565b9050919050565b6000610b7b82610b82565b9050919050565b6000610b8d82610b1e565b9050919050565b6000610b9f82610b3e565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610bd257610bd1610bdd565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b7f4469646e27742073656e7420656e6f7567682100000000000000000000000000600082015250565b50565b610cd381610b02565b8114610cde57600080fd5b50565b610cea81610b14565b8114610cf557600080fd5b50565b610d0181610b3e565b8114610d0c57600080fd5b50565b610d1881610b48565b8114610d2357600080fd5b5056fea2646970667358221220d5d0f92786b1676173bc3dbda8123739236e6964aee85f9180fda1bcc8be5d6664736f6c63430008070033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 61,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 65,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 70,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}